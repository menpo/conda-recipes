diff --git setup.py setup.py
index 2f06bed..d82c337 100644
--- setup.py
+++ setup.py
@@ -25,7 +25,33 @@ ext_kwargs = {
 }
 
 # unfortunately, linking requirements differ on OS X vs Linux
-if sys.platform.startswith('linux'):
+# This is a patch for windows with Conda that allows easy installation of
+# cyrasterize on Windows! We essentially just copy the DLLs into the path
+# so that compiling/run time linking works.
+import sys
+import os
+import shutil
+from glob import glob
+
+def localpath(*args):
+    return os.path.abspath(reduce(os.path.join, (os.path.dirname(__file__),) + args))
+
+
+if sys.platform.startswith('win'):
+    CONDA_GLEW_DIR = os.environ['CONDA_GLEW_DIR']
+    CONDA_GLFW_DIR = os.environ['CONDA_GLFW_DIR']
+    if CONDA_GLEW_DIR is not None:
+        ext_kwargs['include_dirs'] = [os.path.join(CONDA_GLEW_DIR, 'include'),
+                                      os.path.join(CONDA_GLFW_DIR, 'include')]
+        ext_kwargs['library_dirs'] = [os.path.join(CONDA_GLEW_DIR, 'lib'),
+                                      os.path.join(CONDA_GLFW_DIR, 'lib')]
+        ext_kwargs['libraries'] = ['glew32', 'glfw3dll', 'OpenGL32', 'glu32']
+        dlls = glob(os.path.join(CONDA_GLEW_DIR, 'lib', 'glew*.dll'))
+        dlls += glob(os.path.join(CONDA_GLFW_DIR, 'lib', 'glfw3*.dll'))
+        for d in dlls:
+            basename = os.path.basename(d)
+            shutil.copy(d, localpath('cyrasterize', basename))
+elif sys.platform.startswith('linux'):
     ext_kwargs['libraries'] = ['m', 'GLEW', 'GL', 'GLU', 'glfw']
 elif sys.platform == 'darwin':
     ext_kwargs['libraries'] = ['m', 'GLEW', 'glfw3']
@@ -114,7 +140,7 @@ setup(name='cyrasterize',
       ext_modules=extensions,
       packages=find_packages(),
       package_data={'cyrasterize': ['*.pyx', 'cpp/*.h', 'shaders/*.vert',
-                                    'shaders/*.frag']},
+                                    'shaders/*.frag', '*.dll']},
       cmdclass=cmdclass,
       setup_requires=['numpy>=1.8.0'],
       install_requires=['numpy>=1.8.0']
